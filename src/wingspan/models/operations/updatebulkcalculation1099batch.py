"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import bulkbatchupdate as shared_bulkbatchupdate
from ..shared import bulkcalculation1099batch as shared_bulkcalculation1099batch
from typing import Optional



@dataclasses.dataclass
class UpdateBulkCalculation1099BatchRequest:
    batch_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'batchId', 'style': 'simple', 'explode': False }})
    r"""Unique identifier for a batch"""
    bulk_batch_update: Optional[shared_bulkbatchupdate.BulkBatchUpdate] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    




@dataclasses.dataclass
class UpdateBulkCalculation1099BatchResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    bulk_calculation1099_batch: Optional[shared_bulkcalculation1099batch.BulkCalculation1099Batch] = dataclasses.field(default=None)
    r"""A batch of items for importing as calculation 1099s"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

