"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .clientinvoicedatacreaterequest import ClientInvoiceDataCreateRequest
from .frequency import Frequency
from .scheduledate import ScheduleDate
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import List, Optional
from wingspan import utils

class StatusClientInvoiceTemplateCreateRequest(str, Enum):
    ACTIVE = 'Active'
    DRAFT = 'Draft'
    EXPIRED = 'Expired'
    CANCELLED = 'Cancelled'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ClientInvoiceTemplateCreateRequest:
    UNSET='__SPEAKEASY_UNSET__'
    client_email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientEmail') }})
    invoice_data: ClientInvoiceDataCreateRequest = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invoiceData') }})
    member_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberId') }})
    status: StatusClientInvoiceTemplateCreateRequest = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    account_id: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is ClientInvoiceTemplateCreateRequest.UNSET }})
    client_company: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientCompany'), 'exclude': lambda f: f is ClientInvoiceTemplateCreateRequest.UNSET }})
    client_email_cc: Optional[List[str]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientEmailCC'), 'exclude': lambda f: f is ClientInvoiceTemplateCreateRequest.UNSET }})
    client_first_name: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientFirstName'), 'exclude': lambda f: f is ClientInvoiceTemplateCreateRequest.UNSET }})
    client_last_name: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientLastName'), 'exclude': lambda f: f is ClientInvoiceTemplateCreateRequest.UNSET }})
    due_in_days: Optional[float] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dueInDays'), 'exclude': lambda f: f is ClientInvoiceTemplateCreateRequest.UNSET }})
    frequency: Optional[Frequency] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frequency'), 'exclude': lambda f: f is ClientInvoiceTemplateCreateRequest.UNSET }})
    payment_method_id: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentMethodId'), 'exclude': lambda f: f is ClientInvoiceTemplateCreateRequest.UNSET }})
    schedule_dates: Optional[List[ScheduleDate]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheduleDates'), 'exclude': lambda f: f is ClientInvoiceTemplateCreateRequest.UNSET }})
    

