"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .address import Address
from .bankaccount import BankAccount
from .clientoptions import ClientOptions
from .feehandlingconfig import FeeHandlingConfig
from .fees import Fees
from .invoiceattachments import InvoiceAttachments
from .invoiceevents import InvoiceEvents
from .invoiceintegrations import InvoiceIntegrations
from .invoicelineitem import InvoiceLineItem
from .invoicemetadata import InvoiceMetadata
from .latefeeconfig import LateFeeConfig
from .memberclient import MemberClient
from .memberoptions import MemberOptions
from .paymentinfo import PaymentInfo
from .processingfees import ProcessingFees
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import List, Optional
from wingspan import utils

class ClientInvoiceAcceptedPaymentMethods(str, Enum):
    CREDIT = 'Credit'
    ACH = 'ACH'
    MANUAL = 'Manual'
    LESS_THAN_NIL_GREATER_THAN_ = '<nil>'

class Currency(str, Enum):
    USD = 'USD'
    CAD = 'CAD'

class StatusClientInvoice(str, Enum):
    DRAFT = 'Draft'
    OPEN = 'Open'
    OVERDUE = 'Overdue'
    CANCELLED = 'Cancelled'
    PENDING = 'Pending'
    PAYMENT_IN_TRANSIT = 'PaymentInTransit'
    PAID = 'Paid'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ClientInvoice:
    UNSET='__SPEAKEASY_UNSET__'
    additional_recipient_emails: List[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalRecipientEmails') }})
    amount: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount') }})
    client: ClientOptions = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client') }})
    created_at: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdAt') }})
    currency: Currency = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency') }})
    due_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dueDate') }})
    events: InvoiceEvents = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('events') }})
    invoice_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invoiceId') }})
    invoice_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invoiceNumber') }})
    line_items: List[InvoiceLineItem] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lineItems') }})
    member: MemberOptions = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('member') }})
    member_accepts_payments: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberAcceptsPayments') }})
    member_address: Address = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberAddress') }})
    member_client: MemberClient = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberClient') }})
    member_company: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberCompany') }})
    member_email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberEmail') }})
    member_logo_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberLogoUrl') }})
    member_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberName') }})
    member_payments_version: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberPaymentsVersion') }})
    member_stripe_account_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberStripeAccountId') }})
    project_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('projectName') }})
    status: StatusClientInvoice = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    updated_at: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updatedAt') }})
    accepted_payment_methods: Optional[List[ClientInvoiceAcceptedPaymentMethods]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acceptedPaymentMethods'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    account_id: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    attachments: Optional[InvoiceAttachments] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attachments'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    bank_transfer_info: Optional[BankAccount] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bankTransferInfo'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    charged_fees: Optional[Fees] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chargedFees'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    credit_fee_handling: Optional[FeeHandlingConfig] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditFeeHandling'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    integration: Optional[InvoiceIntegrations] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integration'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    international_bank_transfer_info: Optional[BankAccount] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('internationalBankTransferInfo'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    invoice_notes: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invoiceNotes'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    invoice_template_id: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invoiceTemplateId'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    late_fee_handling: Optional[LateFeeConfig] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lateFeeHandling'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    member_formatted_address_lines: Optional[List[str]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberFormattedAddressLines'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    metadata: Optional[InvoiceMetadata] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    payment_info: Optional[PaymentInfo] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentInfo'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    payment_method_id: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentMethodId'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    processing_fees: Optional[ProcessingFees] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('processingFees'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    source_id: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceId'), 'exclude': lambda f: f is ClientInvoice.UNSET }})
    

