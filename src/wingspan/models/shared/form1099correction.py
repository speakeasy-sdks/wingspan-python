"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Any, Optional, Union
from wingspan import utils



@dataclasses.dataclass
class Form1099CorrectionAddress2:
    pass



@dataclasses.dataclass
class Form1099CorrectionAddress:
    pass

class CompanyStructureForm1099Correction(str, Enum):
    NONE = 'None'
    SOLE_PROPRIETORSHIP = 'SoleProprietorship'
    LLC_SINGLE_MEMBER = 'LlcSingleMember'
    LLC_MULTI_MEMBER = 'LlcMultiMember'
    CORPORATION_S = 'CorporationS'
    LLC_CORPORATION_S = 'LLCCorporationS'
    LLC_CORPORATION_C = 'LLCCorporationC'
    LLC_PARTNERSHIP = 'LLCPartnership'
    CORPORATION_C = 'CorporationC'
    PARTNERSHIP = 'Partnership'
    LESS_THAN_NIL_GREATER_THAN_ = '<nil>'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class Form1099Correction:
    address: Optional[Union[Any, Form1099CorrectionAddress2]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})
    company_structure: Optional[CompanyStructureForm1099Correction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('companyStructure') }})
    ein: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ein') }})
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstName') }})
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastName') }})
    legal_business_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('legalBusinessName') }})
    ssn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ssn') }})
    total_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalAmount') }})
    

