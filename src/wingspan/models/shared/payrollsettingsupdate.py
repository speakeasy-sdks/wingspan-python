"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .calculationsettings1099 import CalculationSettings1099
from .frequencyupdate import FrequencyUpdate
from .fundingsource import FundingSource
from .scheduledateupdate import ScheduleDateUpdate
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import List, Optional
from wingspan import utils

class StatusPayrollSettingsUpdate(str, Enum):
    ACTIVE = 'Active'
    DRAFT = 'Draft'
    EXPIRED = 'Expired'
    CANCELLED = 'Cancelled'
    LESS_THAN_NIL_GREATER_THAN_ = '<nil>'

class WorkflowPayrollSettingsUpdate(str, Enum):
    SINGLE_STAGE = 'SingleStage'
    DUAL_STAGE = 'DualStage'
    LESS_THAN_NIL_GREATER_THAN_ = '<nil>'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PayrollSettingsUpdate:
    UNSET='__SPEAKEASY_UNSET__'
    calculation_settings1099: Optional[CalculationSettings1099] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('calculationSettings1099'), 'exclude': lambda f: f is PayrollSettingsUpdate.UNSET }})
    enable_planned_payroll: Optional[bool] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enablePlannedPayroll'), 'exclude': lambda f: f is PayrollSettingsUpdate.UNSET }})
    enable_process_days_before_due: Optional[bool] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableProcessDaysBeforeDue'), 'exclude': lambda f: f is PayrollSettingsUpdate.UNSET }})
    frequency: Optional[FrequencyUpdate] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frequency'), 'exclude': lambda f: f is PayrollSettingsUpdate.UNSET }})
    funding_source: Optional[FundingSource] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fundingSource'), 'exclude': lambda f: f is PayrollSettingsUpdate.UNSET }})
    issue1099s: Optional[bool] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issue1099s'), 'exclude': lambda f: f is PayrollSettingsUpdate.UNSET }})
    process_days_before_due: Optional[float] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('processDaysBeforeDue'), 'exclude': lambda f: f is PayrollSettingsUpdate.UNSET }})
    schedule_dates: Optional[List[ScheduleDateUpdate]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheduleDates'), 'exclude': lambda f: f is PayrollSettingsUpdate.UNSET }})
    status: Optional[StatusPayrollSettingsUpdate] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is PayrollSettingsUpdate.UNSET }})
    workflow: Optional[WorkflowPayrollSettingsUpdate] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workflow'), 'exclude': lambda f: f is PayrollSettingsUpdate.UNSET }})
    

