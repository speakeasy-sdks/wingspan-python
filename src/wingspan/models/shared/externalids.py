"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import externalidsbulkimport as shared_externalidsbulkimport
from ..shared import externalidsquickbooksdata as shared_externalidsquickbooksdata
from dataclasses_json import Undefined, dataclass_json
from typing import Any, Optional, Union
from wingspan import utils



@dataclasses.dataclass
class ExternalIdsBulk:
    pass



@dataclasses.dataclass
class ExternalIdsQuickbooks:
    pass


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ExternalIds:
    bulk: Optional[Union[Any, shared_externalidsbulkimport.ExternalIdsBulkImport]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bulk'), 'exclude': lambda f: f is None }})
    quickbooks: Optional[Union[Any, dict[str, shared_externalidsquickbooksdata.ExternalIdsQuickbooksData]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quickbooks'), 'exclude': lambda f: f is None }})
    stripe: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stripe') }})
    

