"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b as shared_facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b
from ..shared import invoiceintegrations as shared_invoiceintegrations
from ..shared import userroles as shared_userroles
from dataclasses_json import Undefined, dataclass_json
from typing import Any, Optional, Union
from wingspan import utils



@dataclasses.dataclass
class PayrollReportLineItemDiscount:
    pass



@dataclasses.dataclass
class PayrollReportLineItemIntegration:
    pass


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class PayrollReportLineItem:
    cost_per_unit: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('costPerUnit') }})
    created_at: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdAt') }})
    index: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('index') }})
    labels: dict[str, str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels') }})
    quantity: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity') }})
    reimbursable_expense: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reimbursableExpense') }})
    total_cost: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalCost') }})
    unit: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unit') }})
    updated_at: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updatedAt') }})
    user_roles: shared_userroles.UserRoles = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userRoles') }})
    amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    discount: Optional[Union[Any, shared_facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b.Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discount'), 'exclude': lambda f: f is None }})
    discount_total: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discountTotal'), 'exclude': lambda f: f is None }})
    integration: Optional[Union[Any, shared_invoiceintegrations.InvoiceIntegrations]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integration'), 'exclude': lambda f: f is None }})
    

