"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .b9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c import B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c
from .clientdata import ClientData
from .collaboration import Collaboration
from .collaboratorevents import CollaboratorEvents
from .collaboratorv2formw9info import CollaboratorV2FormW9Info
from .memberclientwireaccount import MemberClientWireAccount
from .memberdata import MemberData
from .ninecd48bf78a297540b0ec6f45365beb8d6ce0ee88e6d244115ad226e6701011a3 import Ninecd48bf78a297540b0ec6f45365beb8d6ce0ee88e6d244115ad226e6701011a3
from .redactedmember import RedactedMember
from .userroles import UserRoles
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Dict, List, Optional
from wingspan import utils

class StatusCollaboratorV2(str, Enum):
    ACTIVE = 'Active'
    INACTIVE = 'Inactive'
    PENDING = 'Pending'

class TaxStatusCollaboratorV2(str, Enum):
    COMPLETE = 'Complete'
    FAILED = 'Failed'
    PENDING = 'Pending'
    INCOMPLETE = 'Incomplete'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CollaboratorV2:
    ach_credit_account: MemberClientWireAccount = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('achCreditAccount') }})
    client_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientId') }})
    collaborations: List[Collaboration] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collaborations') }})
    created_at: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdAt') }})
    first_collaboration_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstCollaborationId') }})
    form1099_balances: B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('form1099Balances') }})
    form_w9_data: CollaboratorV2FormW9Info = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('formW9Data') }})
    internal: Ninecd48bf78a297540b0ec6f45365beb8d6ce0ee88e6d244115ad226e6701011a3 = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('internal') }})
    international_wire_account: MemberClientWireAccount = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('internationalWireAccount') }})
    labels: Dict[str, str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels') }})
    member: RedactedMember = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('member') }})
    member_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberId') }})
    primary_collaboration_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryCollaborationId') }})
    status: StatusCollaboratorV2 = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    tax_status: TaxStatusCollaboratorV2 = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxStatus') }})
    updated_at: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updatedAt') }})
    user_roles: UserRoles = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userRoles') }})
    client_data: Optional[ClientData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientData') }})
    member_data: Optional[MemberData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberData') }})
    member_events: Optional[CollaboratorEvents] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberEvents') }})
    

