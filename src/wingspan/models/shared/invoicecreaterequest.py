"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .feehandlingconfig import FeeHandlingConfig
from .invoicecollaboratorcreaterequest import InvoiceCollaboratorCreateRequest
from .invoicelineitemscreaterequest import InvoiceLineItemsCreateRequest
from .invoicemetadata import InvoiceMetadata
from .invoicenotificationpreferences import InvoiceNotificationPreferences
from .latefeeconfigupdate import LateFeeConfigUpdate
from .thirty_sixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2 import ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2
from .three_billion_one_hundred_and_ninety_million_six_hundred_and_eighty_five_thousand_eight_hundred_and_thirty_twoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461 import ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Dict, List, Optional
from wingspan import utils

class InvoiceCreateRequestAcceptedPaymentMethods(str, Enum):
    CREDIT = 'Credit'
    ACH = 'ACH'
    MANUAL = 'Manual'


@dataclasses.dataclass
class Client:
    pass

class CurrencyInvoiceCreateRequest(str, Enum):
    USD = 'USD'
    CAD = 'CAD'


@dataclasses.dataclass
class Member:
    pass

class StatusInvoiceCreateRequest(str, Enum):
    DRAFT = 'Draft'
    OPEN = 'Open'
    OVERDUE = 'Overdue'
    CANCELLED = 'Cancelled'
    PENDING = 'Pending'
    PAYMENT_IN_TRANSIT = 'PaymentInTransit'
    PAID = 'Paid'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InvoiceCreateRequest:
    UNSET='__SPEAKEASY_UNSET__'
    credit_fee_handling: FeeHandlingConfig = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditFeeHandling') }})
    due_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dueDate') }})
    line_items: List[InvoiceLineItemsCreateRequest] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lineItems') }})
    member_client_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberClientId') }})
    accepted_payment_methods: Optional[List[InvoiceCreateRequestAcceptedPaymentMethods]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acceptedPaymentMethods'), 'exclude': lambda f: f is InvoiceCreateRequest.UNSET }})
    attachments: Optional[ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attachments'), 'exclude': lambda f: f is InvoiceCreateRequest.UNSET }})
    client: Optional[Client] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client'), 'exclude': lambda f: f is InvoiceCreateRequest.UNSET }})
    collaborators: Optional[List[InvoiceCollaboratorCreateRequest]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collaborators'), 'exclude': lambda f: f is InvoiceCreateRequest.UNSET }})
    currency: Optional[CurrencyInvoiceCreateRequest] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency'), 'exclude': lambda f: f is InvoiceCreateRequest.UNSET }})
    integration: Optional[ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integration'), 'exclude': lambda f: f is InvoiceCreateRequest.UNSET }})
    invoice_notes: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invoiceNotes'), 'exclude': lambda f: f is InvoiceCreateRequest.UNSET }})
    labels: Optional[Dict[str, str]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is InvoiceCreateRequest.UNSET }})
    late_fee_handling: Optional[LateFeeConfigUpdate] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lateFeeHandling'), 'exclude': lambda f: f is InvoiceCreateRequest.UNSET }})
    member: Optional[Member] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('member'), 'exclude': lambda f: f is InvoiceCreateRequest.UNSET }})
    metadata: Optional[InvoiceMetadata] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is InvoiceCreateRequest.UNSET }})
    notification_preferences: Optional[InvoiceNotificationPreferences] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notificationPreferences'), 'exclude': lambda f: f is InvoiceCreateRequest.UNSET }})
    status: Optional[StatusInvoiceCreateRequest] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is InvoiceCreateRequest.UNSET }})
    

