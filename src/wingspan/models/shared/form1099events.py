"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from typing import Optional
from wingspan import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Form1099Events:
    UNSET='__SPEAKEASY_UNSET__'
    accepted_by_collaborator_at: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acceptedByCollaboratorAt'), 'exclude': lambda f: f is Form1099Events.UNSET }})
    created_at: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdAt'), 'exclude': lambda f: f is Form1099Events.UNSET }})
    post_filing_suggestion_made_at: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postFilingSuggestionMadeAt'), 'exclude': lambda f: f is Form1099Events.UNSET }})
    post_filing_suggestion_resolved_at: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postFilingSuggestionResolvedAt'), 'exclude': lambda f: f is Form1099Events.UNSET }})
    submitted_for_collaborator_review_at: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('submittedForCollaboratorReviewAt'), 'exclude': lambda f: f is Form1099Events.UNSET }})
    suggestion_made_at: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suggestionMadeAt'), 'exclude': lambda f: f is Form1099Events.UNSET }})
    suggestion_resolved_at: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suggestionResolvedAt'), 'exclude': lambda f: f is Form1099Events.UNSET }})
    updated_at: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updatedAt'), 'exclude': lambda f: f is Form1099Events.UNSET }})
    

