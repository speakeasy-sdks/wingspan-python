"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Any, Optional
from wingspan import utils

class DeliveryMethodMemberClientForm1099Balances(str, Enum):
    ELECTRONIC = 'Electronic'
    MAIL = 'Mail'

class ExclusionReasonMemberClientForm1099Balances(str, Enum):
    BELOW_THRESHOLD = 'BelowThreshold'
    COMPANY_STRUCTURE = 'CompanyStructure'
    NON_US_ENTITY = 'NonUsEntity'

class StatusMemberClientForm1099Balances(str, Enum):
    READY = 'Ready'
    NEEDS_ACTION_INFO = 'NeedsActionInfo'
    NEEDS_ACTION_DISPUTE = 'NeedsActionDispute'
    SUBMITTED = 'Submitted'
    REJECTED = 'Rejected'
    ACCEPTED = 'Accepted'
    EXCLUDED = 'Excluded'



@dataclasses.dataclass
class MemberClientForm1099BalancesTaxForm2:
    pass

class TypeMemberClientForm1099Balances(str, Enum):
    NEC = 'NEC'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class MemberClientForm1099Balances:
    adjustments: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adjustments') }})
    delivery_method: DeliveryMethodMemberClientForm1099Balances = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryMethod') }})
    exclusion_reason: ExclusionReasonMemberClientForm1099Balances = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exclusionReason') }})
    form1099_generated: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('form1099Generated') }})
    payment_processing_fees: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentProcessingFees') }})
    platform_income: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('platformIncome') }})
    status: StatusMemberClientForm1099Balances = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    type: TypeMemberClientForm1099Balances = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    correction: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('correction'), 'exclude': lambda f: f is None }})
    dispute: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dispute'), 'exclude': lambda f: f is None }})
    events: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('events'), 'exclude': lambda f: f is None }})
    tax_form: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxForm'), 'exclude': lambda f: f is None }})
    tax_form_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxFormId'), 'exclude': lambda f: f is None }})
    

